name: Release Embed

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: RcloneWebuiAngular-${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            RcloneWebuiAngular-${{ runner.os }}-node-

      - name: Build
        run: |
          npm clean-install
          npm run build:embed

      - name: Archive as Zip
        run: |
          cp src/i18n-index.html dist/build/index.html
          cd dist
          zip -r embed.zip build
          mkdir -p release/${{ github.ref_name }}
          mv embed.zip release/${{ github.ref_name }}/embed.zip
          echo '{"tag_name":"${{ github.ref_name }}","assets":[{"browser_download_url":"https://s3.yuudi.dev/rwa/embed/${{ github.ref_name }}/embed.zip"}]}' > release/version.json

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/release/${{ github.ref_name }}/embed.zip
          asset_name: embed.zip
          asset_content_type: application/zip

      - name: Upload to S3
        uses: docker://rclone/rclone:latest
        with:
          args: |
            ${{ secrets.S3_ARGS }} copy dist/release :s3:yuudi/rwa/embed
